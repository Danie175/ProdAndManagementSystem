// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProdAndManagementSystem.Data;

#nullable disable

namespace Prod_ManagementSystem.Migrations
{
    [DbContext(typeof(JustDbContext))]
    partial class JustDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProdAndManagementSystem.Models.Batchtable", b =>
                {
                    b.Property<int>("Srno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SRNO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Srno"));

                    b.Property<double>("Batchnumber")
                        .HasColumnType("float")
                        .HasColumnName("BATCHNUMBER");

                    b.Property<double?>("Batchquantity")
                        .HasColumnType("float")
                        .HasColumnName("BATCHQUANTITY");

                    b.Property<DateTime?>("Createdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATEDATE")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Customername")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CUSTOMERNAME");

                    b.Property<string>("Cycledate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CYCLEDATE");

                    b.Property<string>("Drivername")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DRIVERNAME");

                    b.Property<double?>("Moistureenable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("MOISTUREENABLE");

                    b.Property<double?>("Orderid")
                        .HasColumnType("float")
                        .HasColumnName("ORDERID");

                    b.Property<double?>("Orderquantity")
                        .HasColumnType("float")
                        .HasColumnName("ORDERQUANTITY");

                    b.Property<string>("Percyclequantity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PERCYCLEQUANTITY");

                    b.Property<string>("Recipename")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("RECIPENAME");

                    b.Property<string>("Sitename")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SITENAME");

                    b.Property<string>("Vehiclenumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("VEHICLENUMBER");

                    b.HasKey("Srno")
                        .HasName("PK__BATCHTAB__A091E37A7DB06628");

                    b.HasIndex("Orderid");

                    b.HasIndex(new[] { "Batchnumber" }, "IX_BATCH_NUMBER");

                    b.HasIndex(new[] { "Batchnumber" }, "UQ__BATCHTAB__B56DDD5DC09213AD")
                        .IsUnique();

                    b.ToTable("BATCHTABLE");
                });

            modelBuilder.Entity("ProdAndManagementSystem.Models.Customer", b =>
                {
                    b.Property<int>("Srno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SRNO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Srno"));

                    b.Property<DateTime?>("Createdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATEDATE")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Customeradd")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CUSTOMERADD");

                    b.Property<int>("Customerid")
                        .HasColumnType("int")
                        .HasColumnName("CUSTOMERID");

                    b.Property<string>("Customername")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CUSTOMERNAME");

                    b.Property<string>("Customernumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CUSTOMERNUMBER");

                    b.Property<string>("Sitename")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SITENAME");

                    b.Property<DateTime?>("Updatedate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATEDATE")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Srno")
                        .HasName("PK__CUSTOMER__A091E37AF17AA5C1");

                    b.HasIndex(new[] { "Customername" }, "IX_CUSTOMER_NAME");

                    b.HasIndex(new[] { "Customerid" }, "UQ__CUSTOMER__61DBD789FDE27297")
                        .IsUnique();

                    b.ToTable("CUSTOMER");
                });

            modelBuilder.Entity("ProdAndManagementSystem.Models.Cycledatum", b =>
                {
                    b.Property<int>("Srno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SRNO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Srno"));

                    b.Property<double?>("Absorptionagg1")
                        .HasColumnType("float")
                        .HasColumnName("ABSORPTIONAGG1");

                    b.Property<double?>("Absorptionagg2")
                        .HasColumnType("float")
                        .HasColumnName("ABSORPTIONAGG2");

                    b.Property<double?>("Absorptionagg3")
                        .HasColumnType("float")
                        .HasColumnName("ABSORPTIONAGG3");

                    b.Property<double?>("Absorptionagg4")
                        .HasColumnType("float")
                        .HasColumnName("ABSORPTIONAGG4");

                    b.Property<double?>("Admix1achi")
                        .HasColumnType("float")
                        .HasColumnName("ADMIX1ACHI");

                    b.Property<string>("Admix1name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ADMIX1NAME");

                    b.Property<double?>("Admix1stp")
                        .HasColumnType("float")
                        .HasColumnName("ADMIX1STP");

                    b.Property<double?>("Admix1trg")
                        .HasColumnType("float")
                        .HasColumnName("ADMIX1TRG");

                    b.Property<double?>("Admix2achi")
                        .HasColumnType("float")
                        .HasColumnName("ADMIX2ACHI");

                    b.Property<string>("Admix2name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ADMIX2NAME");

                    b.Property<double?>("Admix2stp")
                        .HasColumnType("float")
                        .HasColumnName("ADMIX2STP");

                    b.Property<double?>("Admix2trg")
                        .HasColumnType("float")
                        .HasColumnName("ADMIX2TRG");

                    b.Property<double?>("Admix3achi")
                        .HasColumnType("float")
                        .HasColumnName("ADMIX3ACHI");

                    b.Property<string>("Admix3name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ADMIX3NAME");

                    b.Property<double?>("Admix3stp")
                        .HasColumnType("float")
                        .HasColumnName("ADMIX3STP");

                    b.Property<double?>("Admix3trg")
                        .HasColumnType("float")
                        .HasColumnName("ADMIX3TRG");

                    b.Property<double?>("Admixnewachi")
                        .HasColumnType("float")
                        .HasColumnName("ADMIXNEWACHI");

                    b.Property<string>("Admixnewname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ADMIXNEWNAME");

                    b.Property<double?>("Admixnewstp")
                        .HasColumnType("float")
                        .HasColumnName("ADMIXNEWSTP");

                    b.Property<double?>("Admixnewtrg")
                        .HasColumnType("float")
                        .HasColumnName("ADMIXNEWTRG");

                    b.Property<double?>("Agg1achi")
                        .HasColumnType("float")
                        .HasColumnName("AGG1ACHI");

                    b.Property<string>("Agg1name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AGG1NAME");

                    b.Property<double?>("Agg1stp")
                        .HasColumnType("float")
                        .HasColumnName("AGG1STP");

                    b.Property<double?>("Agg1trg")
                        .HasColumnType("float")
                        .HasColumnName("AGG1TRG");

                    b.Property<double?>("Agg2achi")
                        .HasColumnType("float")
                        .HasColumnName("AGG2ACHI");

                    b.Property<string>("Agg2name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AGG2NAME");

                    b.Property<double?>("Agg2stp")
                        .HasColumnType("float")
                        .HasColumnName("AGG2STP");

                    b.Property<double?>("Agg2trg")
                        .HasColumnType("float")
                        .HasColumnName("AGG2TRG");

                    b.Property<double?>("Agg3achi")
                        .HasColumnType("float")
                        .HasColumnName("AGG3ACHI");

                    b.Property<string>("Agg3name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AGG3NAME");

                    b.Property<double?>("Agg3stp")
                        .HasColumnType("float")
                        .HasColumnName("AGG3STP");

                    b.Property<double?>("Agg3trg")
                        .HasColumnType("float")
                        .HasColumnName("AGG3TRG");

                    b.Property<double?>("Agg4achi")
                        .HasColumnType("float")
                        .HasColumnName("AGG4ACHI");

                    b.Property<string>("Agg4name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AGG4NAME");

                    b.Property<double?>("Agg4stp")
                        .HasColumnType("float")
                        .HasColumnName("AGG4STP");

                    b.Property<double?>("Agg4trg")
                        .HasColumnType("float")
                        .HasColumnName("AGG4TRG");

                    b.Property<double?>("Batchnumber")
                        .HasColumnType("float")
                        .HasColumnName("BATCHNUMBER");

                    b.Property<double?>("Batchquantity")
                        .HasColumnType("float")
                        .HasColumnName("BATCHQUANTITY");

                    b.Property<double?>("Cement1achi")
                        .HasColumnType("float")
                        .HasColumnName("CEMENT1ACHI");

                    b.Property<string>("Cement1name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CEMENT1NAME");

                    b.Property<double?>("Cement1stp")
                        .HasColumnType("float")
                        .HasColumnName("CEMENT1STP");

                    b.Property<double?>("Cement1trg")
                        .HasColumnType("float")
                        .HasColumnName("CEMENT1TRG");

                    b.Property<double?>("Cement2achi")
                        .HasColumnType("float")
                        .HasColumnName("CEMENT2ACHI");

                    b.Property<string>("Cement2name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CEMENT2NAME");

                    b.Property<double?>("Cement2stp")
                        .HasColumnType("float")
                        .HasColumnName("CEMENT2STP");

                    b.Property<double?>("Cement2trg")
                        .HasColumnType("float")
                        .HasColumnName("CEMENT2TRG");

                    b.Property<double?>("Cement3achi")
                        .HasColumnType("float")
                        .HasColumnName("CEMENT3ACHI");

                    b.Property<string>("Cement3name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CEMENT3NAME");

                    b.Property<double?>("Cement3stp")
                        .HasColumnType("float")
                        .HasColumnName("CEMENT3STP");

                    b.Property<double?>("Cement3trg")
                        .HasColumnType("float")
                        .HasColumnName("CEMENT3TRG");

                    b.Property<double?>("Cement4achi")
                        .HasColumnType("float")
                        .HasColumnName("CEMENT4ACHI");

                    b.Property<string>("Cement4name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CEMENT4NAME");

                    b.Property<double?>("Cement4stp")
                        .HasColumnType("float")
                        .HasColumnName("CEMENT4STP");

                    b.Property<double?>("Cement4trg")
                        .HasColumnType("float")
                        .HasColumnName("CEMENT4TRG");

                    b.Property<double?>("Correctedaggregate")
                        .HasColumnType("float")
                        .HasColumnName("CORRECTEDAGGREGATE");

                    b.Property<double?>("Correctedwater")
                        .HasColumnType("float")
                        .HasColumnName("CORRECTEDWATER");

                    b.Property<DateTime?>("Createdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATEDATE")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Customeradd")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CUSTOMERADD");

                    b.Property<string>("Customername")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CUSTOMERNAME");

                    b.Property<DateTime?>("Cycledate")
                        .HasColumnType("datetime")
                        .HasColumnName("CYCLEDATE");

                    b.Property<int?>("Cyclenumber")
                        .HasColumnType("int")
                        .HasColumnName("CYCLENUMBER");

                    b.Property<DateTime?>("Cycletime")
                        .HasColumnType("datetime")
                        .HasColumnName("CYCLETIME");

                    b.Property<string>("Drivername")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DRIVERNAME");

                    b.Property<double?>("Moisturecontent")
                        .HasColumnType("float")
                        .HasColumnName("MOISTURECONTENT");

                    b.Property<double?>("Moisturecontentagg1")
                        .HasColumnType("float")
                        .HasColumnName("MOISTURECONTENTAGG1");

                    b.Property<double?>("Moisturecontentagg3")
                        .HasColumnType("float")
                        .HasColumnName("MOISTURECONTENTAGG3");

                    b.Property<double?>("Moisturecontentagg4")
                        .HasColumnType("float")
                        .HasColumnName("MOISTURECONTENTAGG4");

                    b.Property<double?>("Moistureenable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("MOISTUREENABLE");

                    b.Property<double?>("Orderid")
                        .HasColumnType("float")
                        .HasColumnName("ORDERID");

                    b.Property<double?>("Orderquantity")
                        .HasColumnType("float")
                        .HasColumnName("ORDERQUANTITY");

                    b.Property<double?>("Percyclequantity")
                        .HasColumnType("float")
                        .HasColumnName("PERCYCLEQUANTITY");

                    b.Property<int?>("Recipeid")
                        .HasColumnType("int")
                        .HasColumnName("RECIPEID");

                    b.Property<string>("Recipename")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("RECIPENAME");

                    b.Property<double?>("Settotal")
                        .HasColumnType("float")
                        .HasColumnName("SETTOTAL");

                    b.Property<int?>("ShiftNumber")
                        .HasColumnType("int")
                        .HasColumnName("SHIFT NUMBER");

                    b.Property<string>("Siteadd")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("SITEADD");

                    b.Property<string>("Sitename")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SITENAME");

                    b.Property<double?>("Targettotal")
                        .HasColumnType("float")
                        .HasColumnName("TARGETTOTAL");

                    b.Property<double?>("Total")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL");

                    b.Property<string>("Vehiclenumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("VEHICLENUMBER");

                    b.Property<double?>("Water1achi")
                        .HasColumnType("float")
                        .HasColumnName("WATER1ACHI");

                    b.Property<string>("Water1name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("WATER1NAME");

                    b.Property<double?>("Water1stp")
                        .HasColumnType("float")
                        .HasColumnName("WATER1STP");

                    b.Property<double?>("Water1trg")
                        .HasColumnType("float")
                        .HasColumnName("WATER1TRG");

                    b.Property<double?>("Water2achi")
                        .HasColumnType("float")
                        .HasColumnName("WATER2ACHI");

                    b.Property<string>("Water2name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("WATER2NAME");

                    b.Property<double?>("Water2stp")
                        .HasColumnType("float")
                        .HasColumnName("WATER2STP");

                    b.Property<double?>("Water2trg")
                        .HasColumnType("float")
                        .HasColumnName("WATER2TRG");

                    b.HasKey("Srno")
                        .HasName("PK__CYCLEDAT__A091E37A18889775");

                    b.HasIndex("Batchnumber");

                    b.HasIndex("Orderid");

                    b.HasIndex("Recipeid");

                    b.ToTable("CYCLEDATA");
                });

            modelBuilder.Entity("ProdAndManagementSystem.Models.Driver", b =>
                {
                    b.Property<int>("Srno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SRNO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Srno"));

                    b.Property<DateTime?>("Createdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATEDATE")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Driverid")
                        .HasColumnType("int")
                        .HasColumnName("DRIVERID");

                    b.Property<string>("Drivername")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DRIVERNAME");

                    b.Property<string>("Drivernumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DRIVERNUMBER");

                    b.Property<DateTime?>("Updatedate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATEDATE")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Srno")
                        .HasName("PK__DRIVER__A091E37A33A84A48");

                    b.HasIndex(new[] { "Drivername" }, "IX_DRIVER_NAME");

                    b.HasIndex(new[] { "Driverid" }, "UQ__DRIVER__5C38F30D294D6CDA")
                        .IsUnique();

                    b.ToTable("DRIVER");
                });

            modelBuilder.Entity("ProdAndManagementSystem.Models.MaterialInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Createdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATEDATE")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DeliveryChalanNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DriverName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaterialName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<double?>("Rate")
                        .HasColumnType("float");

                    b.Property<string>("Remark")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("SupplierID");

                    b.Property<double?>("TotalCost")
                        .HasColumnType("float");

                    b.Property<string>("TransactionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TruckNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("TxDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TxTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Updatedate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATEDATE")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__Material__3214EC272C2AE1DA");

                    b.HasIndex("SupplierId");

                    b.ToTable("MaterialInventory");
                });

            modelBuilder.Entity("ProdAndManagementSystem.Models.MaterialInventoryDatum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Admix1Adjustment")
                        .HasColumnType("float");

                    b.Property<string>("Admix1Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("Admix1Receipt")
                        .HasColumnType("float");

                    b.Property<double?>("Admix2Adjustment")
                        .HasColumnType("float");

                    b.Property<string>("Admix2Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("Admix2Receipt")
                        .HasColumnType("float");

                    b.Property<double?>("Admix3Adjustment")
                        .HasColumnType("float");

                    b.Property<string>("Admix3Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("Admix3Receipt")
                        .HasColumnType("float");

                    b.Property<double?>("Admix4Adjustment")
                        .HasColumnType("float");

                    b.Property<string>("Admix4Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("Admix4Receipt")
                        .HasColumnType("float");

                    b.Property<double?>("Agg1Adjustment")
                        .HasColumnType("float");

                    b.Property<string>("Agg1Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("Agg1Receipt")
                        .HasColumnType("float");

                    b.Property<double?>("Agg2Adjustment")
                        .HasColumnType("float");

                    b.Property<string>("Agg2Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("Agg2Receipt")
                        .HasColumnType("float");

                    b.Property<double?>("Agg3Adjustment")
                        .HasColumnType("float");

                    b.Property<string>("Agg3Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("Agg3Receipt")
                        .HasColumnType("float");

                    b.Property<double?>("Agg4Adjustment")
                        .HasColumnType("float");

                    b.Property<string>("Agg4Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("Agg4Receipt")
                        .HasColumnType("float");

                    b.Property<double?>("Cemen2Adjustment")
                        .HasColumnType("float");

                    b.Property<string>("Cemen2Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("Cemen2Receipt")
                        .HasColumnType("float");

                    b.Property<double?>("Cemen3Adjustment")
                        .HasColumnType("float");

                    b.Property<string>("Cemen3Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("Cemen3Receipt")
                        .HasColumnType("float");

                    b.Property<double?>("Cemen4Adjustment")
                        .HasColumnType("float");

                    b.Property<string>("Cemen4Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("Cemen4Receipt")
                        .HasColumnType("float");

                    b.Property<double?>("Cement1Adjustment")
                        .HasColumnType("float");

                    b.Property<string>("Cement1Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("Cement1Receipt")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Createdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATEDATE")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DeliveryChalanNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DriverName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("InvoiceNumber")
                        .HasColumnType("float");

                    b.Property<double?>("Rate")
                        .HasColumnType("float");

                    b.Property<string>("Remark")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("SupplierId")
                        .HasColumnType("float")
                        .HasColumnName("SupplierID");

                    b.Property<double?>("TotalCost")
                        .HasColumnType("float");

                    b.Property<string>("TruckNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("TxDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TxTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Updatedate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATEDATE")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double?>("Water1Adjustment")
                        .HasColumnType("float");

                    b.Property<string>("Water1Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("Water1Receipt")
                        .HasColumnType("float");

                    b.Property<double?>("Water2Adjustment")
                        .HasColumnType("float");

                    b.Property<string>("Water2Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("Water2Receipt")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .HasName("PK__Material__3214EC279B874C12");

                    b.ToTable("MaterialInventoryData");
                });

            modelBuilder.Entity("ProdAndManagementSystem.Models.MaterialMaster", b =>
                {
                    b.Property<int>("SrNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SrNo"));

                    b.Property<DateTime?>("Createdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATEDATE")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("DecimalPlaces")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2);

                    b.Property<string>("MaterialCategory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("Updatedate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATEDATE")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("SrNo")
                        .HasName("PK__Material__C3A4D3AC4B56C676");

                    b.ToTable("MaterialMaster");
                });

            modelBuilder.Entity("ProdAndManagementSystem.Models.Ordertable", b =>
                {
                    b.Property<int>("Srno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SRNO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Srno"));

                    b.Property<string>("Admix1name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ADMIX1NAME");

                    b.Property<double?>("Admix1stp")
                        .HasColumnType("float")
                        .HasColumnName("ADMIX1STP");

                    b.Property<string>("Admix2name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ADMIX2NAME");

                    b.Property<double?>("Admix2stp")
                        .HasColumnType("float")
                        .HasColumnName("ADMIX2STP");

                    b.Property<string>("Admix3name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ADMIX3NAME");

                    b.Property<double?>("Admix3stp")
                        .HasColumnType("float")
                        .HasColumnName("ADMIX3STP");

                    b.Property<string>("Admixnewname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ADMIXNEWNAME");

                    b.Property<double?>("Admixnewstp")
                        .HasColumnType("float")
                        .HasColumnName("ADMIXNEWSTP");

                    b.Property<string>("Agg1name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AGG1NAME");

                    b.Property<double?>("Agg1stp")
                        .HasColumnType("float")
                        .HasColumnName("AGG1STP");

                    b.Property<string>("Agg2name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AGG2NAME");

                    b.Property<double?>("Agg2stp")
                        .HasColumnType("float")
                        .HasColumnName("AGG2STP");

                    b.Property<string>("Agg3name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AGG3NAME");

                    b.Property<double?>("Agg3stp")
                        .HasColumnType("float")
                        .HasColumnName("AGG3STP");

                    b.Property<string>("Agg4name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AGG4NAME");

                    b.Property<double?>("Agg4stp")
                        .HasColumnType("float")
                        .HasColumnName("AGG4STP");

                    b.Property<string>("Cement1name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CEMENT1NAME");

                    b.Property<double?>("Cement1stp")
                        .HasColumnType("float")
                        .HasColumnName("CEMENT1STP");

                    b.Property<string>("Cement2name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CEMENT2NAME");

                    b.Property<double?>("Cement2stp")
                        .HasColumnType("float")
                        .HasColumnName("CEMENT2STP");

                    b.Property<string>("Cement3name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CEMENT3NAME");

                    b.Property<double?>("Cement3stp")
                        .HasColumnType("float")
                        .HasColumnName("CEMENT3STP");

                    b.Property<string>("Cement4name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CEMENT4NAME");

                    b.Property<double?>("Cement4stp")
                        .HasColumnType("float")
                        .HasColumnName("CEMENT4STP");

                    b.Property<double?>("Completedquantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("COMPLETEDQUANTITY");

                    b.Property<DateTime?>("Createdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATEDATE")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Customerid")
                        .HasColumnType("int")
                        .HasColumnName("CUSTOMERID");

                    b.Property<string>("Customername")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CUSTOMERNAME");

                    b.Property<double>("Orderid")
                        .HasColumnType("float")
                        .HasColumnName("ORDERID");

                    b.Property<double?>("Orderquantity")
                        .HasColumnType("float")
                        .HasColumnName("ORDERQUANTITY");

                    b.Property<double?>("Pendingquantity")
                        .HasColumnType("float")
                        .HasColumnName("PENDINGQUANTITY");

                    b.Property<int?>("Recipeid")
                        .HasColumnType("int")
                        .HasColumnName("RECIPEID");

                    b.Property<string>("Recipename")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("RECIPENAME");

                    b.Property<int?>("Siteid")
                        .HasColumnType("int")
                        .HasColumnName("SITEID");

                    b.Property<string>("Sitename")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SITENAME");

                    b.Property<DateTime?>("Updatedate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATEDATE")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Water1name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("WATER1NAME");

                    b.Property<double?>("Water1stp")
                        .HasColumnType("float")
                        .HasColumnName("WATER1STP");

                    b.Property<string>("Water2name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("WATER2NAME");

                    b.Property<double?>("Water2stp")
                        .HasColumnType("float")
                        .HasColumnName("WATER2STP");

                    b.HasKey("Srno")
                        .HasName("PK__ORDERTAB__A091E37A6B59AAEE");

                    b.HasIndex("Customerid");

                    b.HasIndex("Recipeid");

                    b.HasIndex("Siteid");

                    b.HasIndex(new[] { "Orderid" }, "IX_ORDER_ID");

                    b.HasIndex(new[] { "Orderid" }, "UQ__ORDERTAB__491E4193020B7B61")
                        .IsUnique();

                    b.ToTable("ORDERTABLE");
                });

            modelBuilder.Entity("ProdAndManagementSystem.Models.Recipe", b =>
                {
                    b.Property<int>("Srno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SRNO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Srno"));

                    b.Property<string>("Admix1name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ADMIX1NAME");

                    b.Property<double?>("Admix1stp")
                        .HasColumnType("float")
                        .HasColumnName("ADMIX1STP");

                    b.Property<string>("Admix2name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ADMIX2NAME");

                    b.Property<double?>("Admix2stp")
                        .HasColumnType("float")
                        .HasColumnName("ADMIX2STP");

                    b.Property<string>("Admix3name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ADMIX3NAME");

                    b.Property<double?>("Admix3stp")
                        .HasColumnType("float")
                        .HasColumnName("ADMIX3STP");

                    b.Property<string>("Admixnewname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ADMIXNEWNAME");

                    b.Property<double?>("Admixnewstp")
                        .HasColumnType("float")
                        .HasColumnName("ADMIXNEWSTP");

                    b.Property<string>("Agg1name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AGG1NAME");

                    b.Property<double?>("Agg1stp")
                        .HasColumnType("float")
                        .HasColumnName("AGG1STP");

                    b.Property<string>("Agg2name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AGG2NAME");

                    b.Property<double?>("Agg2stp")
                        .HasColumnType("float")
                        .HasColumnName("AGG2STP");

                    b.Property<string>("Agg3name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AGG3NAME");

                    b.Property<double?>("Agg3stp")
                        .HasColumnType("float")
                        .HasColumnName("AGG3STP");

                    b.Property<string>("Agg4name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AGG4NAME");

                    b.Property<double?>("Agg4stp")
                        .HasColumnType("float")
                        .HasColumnName("AGG4STP");

                    b.Property<string>("Cement1name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CEMENT1NAME");

                    b.Property<double?>("Cement1stp")
                        .HasColumnType("float")
                        .HasColumnName("CEMENT1STP");

                    b.Property<string>("Cement2name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CEMENT2NAME");

                    b.Property<double?>("Cement2stp")
                        .HasColumnType("float")
                        .HasColumnName("CEMENT2STP");

                    b.Property<string>("Cement3name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CEMENT3NAME");

                    b.Property<double?>("Cement3stp")
                        .HasColumnType("float")
                        .HasColumnName("CEMENT3STP");

                    b.Property<string>("Cement4name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CEMENT4NAME");

                    b.Property<double?>("Cement4stp")
                        .HasColumnType("float")
                        .HasColumnName("CEMENT4STP");

                    b.Property<DateTime?>("Createdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATEDATE")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Recipename")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("RECIPENAME");

                    b.Property<DateTime?>("Updatedate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATEDATE")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Water1name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("WATER1NAME");

                    b.Property<double?>("Water1stp")
                        .HasColumnType("float")
                        .HasColumnName("WATER1STP");

                    b.Property<string>("Water2name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("WATER2NAME");

                    b.Property<double?>("Water2stp")
                        .HasColumnType("float")
                        .HasColumnName("WATER2STP");

                    b.HasKey("Srno")
                        .HasName("PK__RECIPE__A091E37A4A6963AF");

                    b.HasIndex(new[] { "Recipename" }, "IX_RECIPE_NAME");

                    b.HasIndex(new[] { "Id" }, "UQ__RECIPE__3214EC2663A6E0D6")
                        .IsUnique();

                    b.ToTable("Recipe");
                });

            modelBuilder.Entity("ProdAndManagementSystem.Models.Site", b =>
                {
                    b.Property<int>("Srno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SRNO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Srno"));

                    b.Property<DateTime?>("Createdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATEDATE")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Siteadd")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("SITEADD");

                    b.Property<int>("Siteid")
                        .HasColumnType("int")
                        .HasColumnName("SITEID");

                    b.Property<string>("Sitename")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SITENAME");

                    b.Property<string>("Sitenumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SITENUMBER");

                    b.Property<DateTime?>("Updatedate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATEDATE")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Srno")
                        .HasName("PK__SITE__A091E37A0B0E37E6");

                    b.HasIndex(new[] { "Sitename" }, "IX_SITE_NAME");

                    b.HasIndex(new[] { "Siteid" }, "UQ__SITE__A496D1E2614BA488")
                        .IsUnique();

                    b.ToTable("Site");
                });

            modelBuilder.Entity("ProdAndManagementSystem.Models.SupplierMaster", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SupplierID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("AddressLine1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("Createdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATEDATE")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Gstnumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("GSTNumber");

                    b.Property<double?>("PhoneNumber")
                        .HasColumnType("float");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Updatedate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATEDATE")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("SupplierId")
                        .HasName("PK__Supplier__4BE66694950A2EAE");

                    b.ToTable("SupplierMaster");
                });

            modelBuilder.Entity("ProdAndManagementSystem.Models.Table1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id")
                        .HasName("PK__Table1__3214EC2778DAD650");

                    b.ToTable("Table1");
                });

            modelBuilder.Entity("ProdAndManagementSystem.Models.Vehicle", b =>
                {
                    b.Property<int>("Srno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SRNO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Srno"));

                    b.Property<DateTime?>("Createdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CREATEDATE")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("Updatedate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("UPDATEDATE")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Vehicleid")
                        .HasColumnType("int")
                        .HasColumnName("VEHICLEID");

                    b.Property<string>("Vehiclenumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("VEHICLENUMBER");

                    b.HasKey("Srno")
                        .HasName("PK__VEHICLE__A091E37A8A81D148");

                    b.HasIndex(new[] { "Vehiclenumber" }, "IX_VEHICLE_NUMBER");

                    b.HasIndex(new[] { "Vehicleid" }, "UQ__VEHICLE__D4BD3E72156E0801")
                        .IsUnique();

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("ProdAndManagementSystem.Models.Batchtable", b =>
                {
                    b.HasOne("ProdAndManagementSystem.Models.Ordertable", "Order")
                        .WithMany("Batchtables")
                        .HasForeignKey("Orderid")
                        .HasPrincipalKey("Orderid")
                        .HasConstraintName("FK_BATCHTABLE_ORDERTABLE");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ProdAndManagementSystem.Models.Cycledatum", b =>
                {
                    b.HasOne("ProdAndManagementSystem.Models.Batchtable", "BatchnumberNavigation")
                        .WithMany("Cycledata")
                        .HasForeignKey("Batchnumber")
                        .HasPrincipalKey("Batchnumber")
                        .HasConstraintName("FK_CYCLEDATA_BATCHTABLE");

                    b.HasOne("ProdAndManagementSystem.Models.Ordertable", "Order")
                        .WithMany("Cycledata")
                        .HasForeignKey("Orderid")
                        .HasPrincipalKey("Orderid")
                        .HasConstraintName("FK_CYCLEDATA_ORDERTABLE");

                    b.HasOne("ProdAndManagementSystem.Models.Recipe", "Recipe")
                        .WithMany("Cycledata")
                        .HasForeignKey("Recipeid")
                        .HasPrincipalKey("Id")
                        .HasConstraintName("FK_CYCLEDATA_RECIPE");

                    b.Navigation("BatchnumberNavigation");

                    b.Navigation("Order");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("ProdAndManagementSystem.Models.MaterialInventory", b =>
                {
                    b.HasOne("ProdAndManagementSystem.Models.SupplierMaster", "Supplier")
                        .WithMany("MaterialInventories")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK_MaterialInventory_SupplierMaster");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("ProdAndManagementSystem.Models.Ordertable", b =>
                {
                    b.HasOne("ProdAndManagementSystem.Models.Customer", "Customer")
                        .WithMany("Ordertables")
                        .HasForeignKey("Customerid")
                        .HasPrincipalKey("Customerid")
                        .HasConstraintName("FK_ORDERTABLE_CUSTOMER");

                    b.HasOne("ProdAndManagementSystem.Models.Recipe", "Recipe")
                        .WithMany("Ordertables")
                        .HasForeignKey("Recipeid")
                        .HasPrincipalKey("Id")
                        .HasConstraintName("FK_ORDERTABLE_RECIPE");

                    b.HasOne("ProdAndManagementSystem.Models.Site", "Site")
                        .WithMany("Ordertables")
                        .HasForeignKey("Siteid")
                        .HasPrincipalKey("Siteid")
                        .HasConstraintName("FK_ORDERTABLE_SITE");

                    b.Navigation("Customer");

                    b.Navigation("Recipe");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("ProdAndManagementSystem.Models.Batchtable", b =>
                {
                    b.Navigation("Cycledata");
                });

            modelBuilder.Entity("ProdAndManagementSystem.Models.Customer", b =>
                {
                    b.Navigation("Ordertables");
                });

            modelBuilder.Entity("ProdAndManagementSystem.Models.Ordertable", b =>
                {
                    b.Navigation("Batchtables");

                    b.Navigation("Cycledata");
                });

            modelBuilder.Entity("ProdAndManagementSystem.Models.Recipe", b =>
                {
                    b.Navigation("Cycledata");

                    b.Navigation("Ordertables");
                });

            modelBuilder.Entity("ProdAndManagementSystem.Models.Site", b =>
                {
                    b.Navigation("Ordertables");
                });

            modelBuilder.Entity("ProdAndManagementSystem.Models.SupplierMaster", b =>
                {
                    b.Navigation("MaterialInventories");
                });
#pragma warning restore 612, 618
        }
    }
}
